<?xml version="1.0"?>
<!--
 This Ant build script downloads dependency jars needed by thus bundle
 from several maven repositories on the net.
 -->
<project name="qi4j-core" 
    default="build" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <description>Download open source jars from the internet.</description>
	
    <property name="lib" value="${basedir}${file.separator}lib" />
	<property name="libs_src_dir" value="${lib}${file.separator}sources" />
    <available property="already_downloaded" type="dir" file="${lib}" />

    <!-- remote repositories -->
	<!-- central=http://mirrors.ibiblio.org/pub/mirrors/maven2 -->
    <artifact:remoteRepository id="central.repository" url="http://repo1.maven.org/maven2" />

	<!-- local repository i.e. folder to be used as storage for downloaded library files -->
	<artifact:localRepository id="local.repository" path="${user.home}/.m2/repository" />

    <!--
     Target: load_deps
     -->
    <target name="load_deps" unless="already_downloaded">
        <artifact:dependencies filesetId="dependency.fileset" 
        	   sourcesFilesetId="sources.dependency.fileset" 
        	   versionsId="dependency.versions" 
        	   useScope="runtime">

            <!-- repositories as defined above-->
            <localRepository refid="local.repository" />
            <remoteRepository refid="central.repository" />

        	<!-- libs -->
            <dependency groupId="cglib" artifactId="cglib-nodep" version="2.2" />
            <dependency groupId="com.google.guava" artifactId="guava" version="10.0.1" />
            
        </artifact:dependencies>
    </target>

    <!--
     Target: build
     -->
    <target name="build" depends="create, load_deps" unless="already_downloaded">
        <description>Download the jars - used by a manual "clean"</description>

        <!-- setproxy proxyhost="10.0.16.2" proxyport="3128"/-->

        <!-- (flat) copy all downloaded JARs (classes) to plugin directory ${lib} -->
        <copy todir="${lib}" verbose="true" flatten="true">
            <fileset refid="dependency.fileset" />
        </copy>

        <!-- (flat) copy downloaded source JARs (sources) to plugin directory ${libs_src_dir} -->
        <copy todir="${libs_src_dir}" flatten="true" verbose="true">
            <fileset refid="sources.dependency.fileset" />
            <chainedmapper>
                <mapper type="flatten" />
                <globmapper from="*-sources.jar" to="*-sources.zip" />
            </chainedmapper>
        </copy>
        <!-- <eclipse.refreshLocal resource="net.refractions.udig.libs/lib" depth="infinite"/>  -->
    </target>

    <!--
     Target: create
     -->
    <target name="create" unless="already_downloaded">
        <description>creates the lib directory if needed</description>
        <mkdir dir="${lib}" />
        <mkdir dir="${libs_src_dir}" />
    </target>

    <!-- Used by headless build please make sure this does everthing from clean to download and fix etc.. -->
    <target name="full-build" depends="clean, build" description="clean and build">
    </target>
	
	<!--
	 Target: clean
	 -->
    <target name="clean" description="Deletes external libraries folder.">
        <delete dir="${lib}" />
	</target>


</project>